name: Auto-update blog posts

on:
  schedule:
    - cron: "15 8 * * *"   # daily 08:15 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests python-slugify

      - name: Ensure folders
        run: |
          mkdir -p assets/cache
          [ -f assets/cache/.gitkeep ] || : > assets/cache/.gitkeep
          mkdir -p _posts

      # Normalize/strip secret to avoid trailing spaces/newlines
      - name: Prepare API key
        id: prep
        shell: bash
        env:
          RAW_KEY: ${{ secrets.NEWSDATA_API_KEY }}
        run: |
          if [ -z "${RAW_KEY}" ]; then
            echo "❌ NEWSDATA_API_KEY is empty. Add it in Settings → Secrets and variables → Actions."
            exit 1
          fi
          CLEAN_KEY="$(printf '%s' "${RAW_KEY}" | tr -d '\r\n\t ')"
          echo "::add-mask::${CLEAN_KEY}"
          echo "key=${CLEAN_KEY}" >> "$GITHUB_OUTPUT"

      # Minimal live smoke test to see the API’s real JSON message
      - name: Smoke test Newsdata
        shell: bash
        env:
          KEY: ${{ steps.prep.outputs.key }}
        run: |
          python - <<'PY'
          import os, requests, sys
          key = os.environ["KEY"]
          url = "https://newsdata.io/api/1/news"
          params = {"apikey": key, "q": "ai", "language": "en", "page": 1}
          print(f"URL: {url}?apikey=***&q=ai&language=en&page=1")
          r = requests.get(url, params=params, timeout=20)
          try:
            r.raise_for_status()
          except Exception as e:
            print("HTTP", r.status_code, ":", e)
            print("Body:", r.text[:500])
            sys.exit(1)
          print("OK. JSON keys:", list((r.json() or {}).keys()))
          PY

      - name: Run updater
        env:
          NEWSDATA_API_KEY: ${{ steps.prep.outputs.key }}
        run: |
          python scripts/update_posts.py

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "auto: daily AI posts"
            git push
          fi
