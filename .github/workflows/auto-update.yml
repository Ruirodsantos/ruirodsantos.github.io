name: Auto-update blog posts

on:
  schedule:
    - cron: "15 8 * * *"     # daily 08:15 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    env:
      # Accept either name; you only have NEWS_API_KEY and that's fine.
      NEWS_API_KEY:           ${{ secrets.NEWS_API_KEY || vars.NEWS_API_KEY }}
      NEWSDATA_API_KEY_ALT:   ${{ secrets.NEWSDATA_API_KEY || vars.NEWSDATA_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests python-slugify

      - name: Resolve API key
        id: api
        shell: bash
        run: |
          API="${NEWSDATA_API_KEY_ALT:-$NEWS_API_KEY}"
          if [ -z "$API" ]; then
            echo "❌ No API key found. Add NEWS_API_KEY as a repo secret."
            exit 1
          fi
          # Mask + expose
          echo "::add-mask::$API"
          echo "api=$API" >> "$GITHUB_OUTPUT"
          echo "✅ Key present (length: ${#API})."

      # --- smoke test so we see *real* traffic on Newsdata and debug quickly
      - name: Smoke test Newsdata (debug)
        env:
          KEY: ${{ steps.api.outputs.api }}
        run: |
          set -e
          URL="https://newsdata.io/api/1/news?apikey=${KEY}&q=ai&language=en&category=technology&page=1"
          SAFE_URL="${URL/${KEY}/****}"
          echo "GET $SAFE_URL"
          HTTP=$(curl -sS -w "%{http_code}" -o /tmp/body.json "$URL" || true)
          echo "HTTP $HTTP"
          head -c 600 /tmp/body.json || true
          echo
          if [ "$HTTP" -ge 400 ]; then
            echo "❌ Newsdata returned $HTTP – fix before running the updater."
            exit 1
          fi

      - name: Ensure cache dir
        run: |
          mkdir -p assets/cache
          [ -f assets/cache/.gitkeep ] || : > assets/cache/.gitkeep

      - name: Run updater (fetch + enrich + write)
        env:
          # the script accepts either env; we give it the resolved key in both
          NEWSDATA_API_KEY: ${{ steps.api.outputs.api }}
          NEWS_API_KEY:     ${{ steps.api.outputs.api }}
        run: |
          echo "▶ scripts/update_posts.py starting…"
          python scripts/update_posts.py

      - name: Commit & push if changed
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "[${{ github.ref_name }} $GITHUB_RUN_NUMBER] Auto-update blog posts [skip ci]"
            git push
          fi
